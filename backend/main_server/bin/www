#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../server'); // Importa app da server.js
var debug = require('debug')('main-server:server');
var http = require('http');

/**
 * Ottieni la porta dall'ambiente o usa una porta predefinita
 */
var port = normalizePort(process.env.PORT || '5001');

/**
 * Crea il server HTTP
 */
var server = http.createServer(app);

/**
 * Ascolta sulla porta specificata
 */
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalizza la porta (numero o stringa)
 */
function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {
    return port;
  }

  return false;
}

/**
 * Gestisci gli errori nel server
 */
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Gestisci quando il server inizia a "ascoltare"
 */
function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
